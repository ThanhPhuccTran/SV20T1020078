@model SV20T1020078.Web.Models.OrderSearchInput
@{
    ViewBag.Title = "Quản lý đơn hàng";
}

<div class="box box-primary">
    <div class="box-body">
        <!--Form đầu vào tìm kiếm-->
        <form id="formSearch" action="~/Order/Search" data-container="#searchResult" method="get">
            <div class="row container-fluid">
                <div class="col-sm-2">
                    @Html.ValidationMessageFor(m => m.Status)
                    @Html.DropDownListFor(m => m.Status, SelectListHelper.Status(), new { @class = "form-control", id = "Status" })
                </div>
                <div class="col-sm-2">
                    <input type="text" name="@nameof(Model.DateRange)" class="form-control daterange-picker" value="@Model.DateRange" placeholder="" />
                </div>
                <div class="col-sm-8 input-group">
                    <input type="hidden" name="@nameof(Model.PageSize)" value="@Model.PageSize" />
                    <input type="text" name="searchValue" class="form-control" value="@Model.SearchValue" placeholder="Tìm kiếm theo tên khách hàng hoặc tên người giao hàng">
                    <span class="input-group-btn">
                        <button type="submit" id="search-btn" class="btn btn-flat btn-info">
                            <i class="fa fa-search"></i> Tìm kiếm
                        </button>
                    </span>
                </div>
            </div>
        </form>

        <!-- Kết quả tìm kiếm -->
        <div id="searchResult">
            <!-- Dữ liệu kết quả tìm kiếm sẽ được hiển thị ở đây -->
        </div>
    </div>
</div>
 @* $(document).ready(function () {
            // Khởi tạo daterangepicker
            $('.daterange-picker').daterangepicker({
                startDate: '03/21/2020', // Ngày bắt đầu
                endDate: new Date(), // Ngày kết thúc là ngày hôm nay
                ranges: {
                    'Today': [new Date(), new Date()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), new Date()],
                    'Last 30 Days': [moment().subtract(29, 'days'), new Date()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }); *@

@section scripts {
    <script>
        $("input[name='@nameof(Model.DateRange)']").change(function () {
            doSearch("#formSearch", 1); // Gửi yêu cầu tìm kiếm khi giá trị thay đổi
        });

        $("#Status").change(function () {
            doSearch("#formSearch", 1); // Gửi yêu cầu tìm kiếm khi giá trị thay đổi
        });

        $(document).ready(function () {
            $("#formSearch").submit(function (e) {
                e.preventDefault();
                doSearch(this, 1);
                return;
            });
            
            // Khởi tạo giá trị cho biến Model.SearchValue khi trang được tải lại
            var searchValue = $("input[name='searchValue']").val();
            if (searchValue != "") {
                $("input[name='searchValue']").val(searchValue);
            }

            // Khởi tạo giá trị cho biến Model.DateRange khi trang được tải lại
            var DateRange = $("input[name='@nameof(Model.DateRange)']").val();
            if (DateRange != "") {
                $("input[name='@nameof(Model.DateRange)']").val(DateRange);
            }

            // Gọi hàm doSearch khi trang được tải lại
            doSearch("#formSearch", @Model.Page);
        });

        function doSearch(formSearchInput, page) {
            var url = $(formSearchInput).prop("action");
            var container = $(formSearchInput).data("container");
            var postData = $(formSearchInput).serializeArray();
            postData.push({ "name": "page", "value": page });
            $.ajax({
                url: url,
                type: "POST",
                data: postData,
                error: function () {
                    alert("Your request is not valid!");
                },
                success: function (data) {
                    $(container).html(data);
                }
            });
        }
    </script>
}
